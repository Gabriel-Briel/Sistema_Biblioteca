/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bibliotecaa3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import com.lowagie.text.*;
import com.lowagie.text.pdf.*;
import java.io.FileOutputStream;


/**
 *
 * @author edgle
 */
public class RelatóriosFrame extends javax.swing.JFrame {

   // === DADOS DE CONEXÃO – cole AQUI, logo após a declaração da classe ===
    private static final String URL  = "jdbc:mysql://localhost:3306/bibliotecaa3";
    private static final String USER = "root";
    private static final String PASS = "Fr4nc1sc0@";
    // ======================================================================
    
    /**
     * Creates new form RelatóriosFrame
     */
   
    
    public RelatóriosFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbTipoDeRelatorio = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dcDataFim = new javax.swing.JFormattedTextField();
        dcDataInicio = new javax.swing.JFormattedTextField();
        btnGerarRelatorio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRelatorio = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTotalDeRegistro = new javax.swing.JTextField();
        btnExportarPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RELATÓRIOS");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Tipo de Relatório :");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        cmbTipoDeRelatorio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbTipoDeRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Livros mais emprestados", "Livros menos emprestados", "Membros ativos", "Devolução fora do prazo" }));
        cmbTipoDeRelatorio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        cmbTipoDeRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoDeRelatorioActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Data inicial :");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Data final :");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        dcDataFim.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        dcDataFim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        dcDataInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        dcDataInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnGerarRelatorio.setBackground(new java.awt.Color(51, 102, 0));
        btnGerarRelatorio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnGerarRelatorio.setForeground(new java.awt.Color(255, 255, 255));
        btnGerarRelatorio.setText("Gerar Relatório");
        btnGerarRelatorio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarRelatorioActionPerformed(evt);
            }
        });

        tblRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Livro", "Membro", "Data Empréstimo", "Data Devolução", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblRelatorio);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Total de Registro :");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        txtTotalDeRegistro.setEditable(false);
        txtTotalDeRegistro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTotalDeRegistro.setForeground(new java.awt.Color(0, 0, 255));
        txtTotalDeRegistro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        txtTotalDeRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalDeRegistroActionPerformed(evt);
            }
        });

        btnExportarPDF.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExportarPDF.setForeground(new java.awt.Color(255, 0, 51));
        btnExportarPDF.setText("Exportar PDF");
        btnExportarPDF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbTipoDeRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(156, 156, 156)
                                .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalDeRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbTipoDeRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(btnGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(dcDataInicio))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalDeRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoDeRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoDeRelatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoDeRelatorioActionPerformed

    private void btnGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarRelatorioActionPerformed
        // TODO add your handling code here:

    // 1) Lê filtros da tela
    String tipo = (String) cmbTipoDeRelatorio.getSelectedItem();
    String inicioStr = dcDataInicio.getText().trim();
    String fimStr    = dcDataFim.getText().trim();

    // 2) Validação básica de datas
    if (inicioStr.isEmpty() || fimStr.isEmpty()) {
        JOptionPane.showMessageDialog(this,
            "Preencha Data inicial e Data final!",
            "Atenção", JOptionPane.WARNING_MESSAGE);
        return;
    }
    Date dtInicio, dtFim;
    try {
        dtInicio = new SimpleDateFormat("dd/MM/yyyy").parse(inicioStr);
        dtFim    = new SimpleDateFormat("dd/MM/yyyy").parse(fimStr);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this,
            "Formato de data inválido. Use dd/MM/yyyy",
            "Erro de Data", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // 3) Prepara o modelo da tabela
    DefaultTableModel model = (DefaultTableModel) tblRelatorio.getModel();
    model.setRowCount(0);

    // 4) Monta SQL e colunas de acordo com o relatório
    String sql = null;

    switch (tipo) {
        case "Livros mais emprestados":
            model.setColumnIdentifiers(new String[]{"Título", "Total Empréstimos"});
            sql =  "SELECT l.Titulo, COUNT(*) AS total " +
                   "FROM emprestimos e " +
                   "JOIN livros l ON e.ID_Livro = l.ID " +
                   "WHERE e.Data_Emprestimo BETWEEN ? AND ? " +
                   "GROUP BY l.Titulo " +
                   "ORDER BY total DESC";
            break;

        case "Livros menos emprestados":
            model.setColumnIdentifiers(new String[]{"Título", "Total Empréstimos"});
            sql =  "SELECT l.Titulo, COUNT(e.ID_Livro) AS total " +
                   "FROM livros l " +
                   "LEFT JOIN emprestimos e ON l.ID = e.ID_Livro AND e.Data_Emprestimo BETWEEN ? AND ? " +
                   "GROUP BY l.Titulo " +
                   "ORDER BY total ASC";
            break;

        case "Membros ativos":
            model.setColumnIdentifiers(new String[]{"Membro", "Total Empréstimos"});
            sql =  "SELECT m.Nome, COUNT(e.ID) AS total " +
                   "FROM membros m " +
                   "JOIN emprestimos e ON m.ID = e.ID_Membro AND e.Data_Emprestimo BETWEEN ? AND ? " +
                   "GROUP BY m.Nome " +
                   "ORDER BY total DESC";
            break;

        case "Devolução fora do prazo":
            model.setColumnIdentifiers(new String[]{"Livro", "Membro", "Data Empréstimo", "Data Devolução", "Status"});
            sql =  "SELECT l.Titulo, m.Nome, e.Data_Emprestimo, e.Data_Devolucao, e.Status " +
                   "FROM emprestimos e " +
                   "JOIN livros l ON e.ID_Livro = l.ID " +
                   "JOIN membros m ON e.ID_Membro = m.ID " +
                   "WHERE e.Data_Emprestimo BETWEEN ? AND ? " +
                   "AND e.Data_Devolucao > e.Data_Devolucao";
            break;

        default:
            JOptionPane.showMessageDialog(this,
                "Relatório ainda não implementado.",
                "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
    }

    // 5) Executa a consulta e preenche a tabela
    try (Connection conn = DriverManager.getConnection(URL, USER, PASS);
         PreparedStatement ps = conn.prepareStatement(sql)) {

        ps.setDate(1, new java.sql.Date(dtInicio.getTime()));
        ps.setDate(2, new java.sql.Date(dtFim.getTime()));
        try (ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                switch (tipo) {
                    case "Livros mais emprestados":
                    case "Livros menos emprestados":
                        model.addRow(new Object[]{
                            rs.getString("Titulo"),
                            rs.getInt("total")
                        });
                        break;

                    case "Membros ativos":
                        model.addRow(new Object[]{
                            rs.getString("Nome"),
                            rs.getInt("total")
                        });
                        break;

                    case "Devolução fora do prazo":
                        model.addRow(new Object[]{
                            rs.getString("Titulo"),
                            rs.getString("Nome"),
                            rs.getDate("Data_Emprestimo"),
                            rs.getDate("Data_Devolucao"),
                            rs.getString("Status")
                        });
                        break;
                }
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this,
            "Erro ao gerar relatório:\n" + ex.getMessage(),
            "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // 6) Exibe o total de registros encontrados
    txtTotalDeRegistro.setText(String.valueOf(model.getRowCount()));
          
    }//GEN-LAST:event_btnGerarRelatorioActionPerformed

    private void txtTotalDeRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalDeRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalDeRegistroActionPerformed

    // === INÍCIO: Método para exportar JTable para PDF ===
private void exportarTabelaParaPDF(javax.swing.JTable table, String caminho) {
    try {
        Document doc = new Document();
        PdfWriter.getInstance(doc, new FileOutputStream(caminho));
        doc.open();

        // Título do relatório
        doc.add(new Paragraph("Relatório Gerado no Sistema"));
        doc.add(new Paragraph(" ")); // espaço

        // Tabela do PDF com a mesma quantidade de colunas da JTable
        PdfPTable pdfTable = new PdfPTable(table.getColumnCount());

        // Cabeçalhos
        for (int i = 0; i < table.getColumnCount(); i++) {
            pdfTable.addCell(new PdfPCell(new Phrase(table.getColumnName(i))));
        }

        // Linhas de dados
        for (int row = 0; row < table.getRowCount(); row++) {
            for (int col = 0; col < table.getColumnCount(); col++) {
                Object value = table.getValueAt(row, col);
                pdfTable.addCell(value == null ? "" : value.toString());
            }
        }

        doc.add(pdfTable);
        doc.close();

        JOptionPane.showMessageDialog(this, "PDF exportado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Erro ao exportar PDF:\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}
// === FIM: Método para exportar JTable para PDF ===
    
    private void btnExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPDFActionPerformed
        // TODO add your handling code here:
        
    // Abre um diálogo para salvar o arquivo
    javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
    fileChooser.setDialogTitle("Salvar PDF");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Arquivos PDF", "pdf"));

    int userSelection = fileChooser.showSaveDialog(this);

    if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
        String caminho = fileChooser.getSelectedFile().getAbsolutePath();
        if (!caminho.toLowerCase().endsWith(".pdf")) {
            caminho += ".pdf";
        }
        exportarTabelaParaPDF(tblRelatorio, caminho);
    }
        
    }//GEN-LAST:event_btnExportarPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatóriosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatóriosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatóriosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatóriosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatóriosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JButton btnGerarRelatorio;
    private javax.swing.JComboBox<String> cmbTipoDeRelatorio;
    private javax.swing.JFormattedTextField dcDataFim;
    private javax.swing.JFormattedTextField dcDataInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRelatorio;
    private javax.swing.JTextField txtTotalDeRegistro;
    // End of variables declaration//GEN-END:variables
}
