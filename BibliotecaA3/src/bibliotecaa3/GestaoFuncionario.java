/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bibliotecaa3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;               // para criar e executar consultas
import java.sql.ResultSet;               // para ler o resultado da consulta
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;  // para manipular o modelo da JTable


/**
 *
 * @author edgle
 */
public class GestaoFuncionario extends javax.swing.JFrame {

    
    // === DADOS DE CONEXÃO – cole aqui ===
    private static final String URL  = "jdbc:mysql://localhost:3306/bibliotecaa3";
    private static final String USER = "root";
    private static final String PASS = "Fr4nc1sc0@";
    // =====================================
    
    /**
     * Carrega todos os funcionários da tabela no model da JTable.
     */
    private void carregarFuncionarios() {
        DefaultTableModel model = (DefaultTableModel) tblFuncionarios.getModel();
        model.setRowCount(0);

        String sql = "SELECT ID, Nome, Cargo, Login, Senha FROM funcionarios";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASS);
             Statement  stmt = conn.createStatement();
             ResultSet  rs   = stmt.executeQuery(sql)) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getString("Nome"),
                    rs.getString("Cargo"),
                    rs.getString("Login"),
                    rs.getString("Senha")    // ← senha direto do banco
                    
                    
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                "Erro ao carregar funcionários:\n" + ex.getMessage(),
                "Erro de Conexão",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Creates new form GestaoFuncionario
     */
    
    public GestaoFuncionario() {
        initComponents();
        carregarFuncionarios();
        
        tblFuncionarios.getSelectionModel().addListSelectionListener(e -> {
        // evita disparos duplos
        if (!e.getValueIsAdjusting()) {
            int row = tblFuncionarios.getSelectedRow();
            if (row >= 0) {
                // pega valores das colunas da linha selecionada
                String nome  = tblFuncionarios.getValueAt(row, 1).toString();
                String cargo = tblFuncionarios.getValueAt(row, 2).toString();
                String login = tblFuncionarios.getValueAt(row, 3).toString();

                // preenche os campos do formulário
                txtNome.setText(nome);
                cmbCargo.setSelectedItem(cargo);
                txtLogin.setText(login);
                
                // se quiser trazer a senha, ou deixe em branco:
                pwdSenha.setText("");
                
                // se quiser buscar a senha real do banco:
                // int id = (int) tblFuncionarios.getValueAt(row, 0);
                // carregarSenha(id);
            }
        }
    });
    // ————————————————————————————————————————————————
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        cmbCargo = new javax.swing.JComboBox<>();
        pwdSenha = new javax.swing.JPasswordField();
        txtLogin = new javax.swing.JTextField();
        btnAtualizar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuncionarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GERENCIAR FUNCIONÁRIOS");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Cargo");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Login");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Senha");

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cmbCargo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Bibliotecário", "Atendente", "Auxiliar de Biblioteca" }));

        pwdSenha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtLogin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLimpar.setText("Limpar Campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        tblFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Cargo", "Login"
            }
        ));
        jScrollPane1.setViewportView(tblFuncionarios);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNome)
                                    .addComponent(cmbCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pwdSenha)
                                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpar)))
                        .addGap(0, 178, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCargo)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pwdSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(404, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
    // ===== INÍCIO do bloco JDBC para CADASTRO DE FUNCIONÁRIOS =====
// 1) Lê os valores dos campos
String nome   = txtNome.getText().trim();
String cargo  = (String)cmbCargo.getSelectedItem();
String login  = txtLogin.getText().trim();
String senha  = new String(pwdSenha.getPassword()).trim();

// 2) Validações básicas
if (nome.isEmpty() || login.isEmpty() || senha.isEmpty()) {
    JOptionPane.showMessageDialog(this,
        "Nome, Login e Senha são obrigatórios!",
        "Atenção",
        JOptionPane.WARNING_MESSAGE);
    return;
}

// 3) Prepara e executa o INSERT
String sql = "INSERT INTO funcionarios (Nome, Cargo, Login, Senha) VALUES (?, ?, ?, ?)";
try (Connection conn = DriverManager.getConnection(URL, USER, PASS);
     PreparedStatement ps = conn.prepareStatement(sql)) {

    ps.setString(1, nome);
    ps.setString(2, cargo);
    ps.setString(3, login);
    ps.setString(4, senha);
    ps.executeUpdate();

JOptionPane.showMessageDialog(this,
    "Funcionário cadastrado com sucesso!",
    "Sucesso",
    JOptionPane.INFORMATION_MESSAGE);

// recarrega a JTable com os dados atuais
    carregarFuncionarios();


    // 4) Limpa os campos
    txtNome.setText("");
    cmbCargo.setSelectedIndex(0);
    txtLogin.setText("");
    pwdSenha.setText("");

    // (Opcional) recarregar a sua JTable aqui

} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this,
        "Erro ao cadastrar funcionário:\n" + ex.getMessage(),
        "Erro de Conexão",
        JOptionPane.ERROR_MESSAGE);
}
// ===== FIM do bloco JDBC =====
 
    
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
    
    // ===== INÍCIO do bloco JDBC para ATUALIZAÇÃO DE FUNCIONÁRIO =====
// 1) Verifica se há linha selecionada na tabela
int row = tblFuncionarios.getSelectedRow();
if (row < 0) {
    JOptionPane.showMessageDialog(this,
        "Selecione um funcionário na tabela para atualizar.",
        "Atenção",
        JOptionPane.WARNING_MESSAGE);
    return;
}

// 2) Lê os valores dos campos
String nome   = txtNome.getText().trim();
String cargo  = (String)cmbCargo.getSelectedItem();
String login  = txtLogin.getText().trim();
String senha  = new String(pwdSenha.getPassword()).trim();

// 3) Validações básicas
if (nome.isEmpty() || login.isEmpty() || senha.isEmpty()) {
    JOptionPane.showMessageDialog(this,
        "Nome, Login e Senha são obrigatórios!",
        "Atenção",
        JOptionPane.WARNING_MESSAGE);
    return;
}

// 4) Recupera o ID da linha selecionada (coluna 0)
int id = (int) tblFuncionarios.getModel().getValueAt(row, 0);

// 5) Prepara e executa o UPDATE
String sql = "UPDATE funcionarios "
           + "SET Nome = ?, Cargo = ?, Login = ?, Senha = ? "
           + "WHERE ID = ?";
try (Connection conn = DriverManager.getConnection(URL, USER, PASS);
     PreparedStatement ps = conn.prepareStatement(sql)) {

    ps.setString(1, nome);
    ps.setString(2, cargo);
    ps.setString(3, login);
    ps.setString(4, senha);
    ps.setInt(5, id);
    int updated = ps.executeUpdate();

    if (updated > 0) {
        JOptionPane.showMessageDialog(this,
            "Funcionário atualizado com sucesso!",
            "Sucesso",
            JOptionPane.INFORMATION_MESSAGE);
        // (re)carregar a tabela após a atualização
        // ex: carregarFuncionarios();
    } else {
        JOptionPane.showMessageDialog(this,
            "Nenhum funcionário foi atualizado.",
            "Aviso",
            JOptionPane.WARNING_MESSAGE);
    }

} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this,
        "Erro ao atualizar no banco:\n" + ex.getMessage(),
        "Erro de Conexão",
        JOptionPane.ERROR_MESSAGE);
}
// ===== FIM do bloco JDBC =====

    
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
    // ===== INÍCIO do bloco JDBC para EXCLUSÃO DE FUNCIONÁRIO =====
// 1) Verifica se alguma linha está selecionada
int row = tblFuncionarios.getSelectedRow();
if (row < 0) {
    JOptionPane.showMessageDialog(this,
        "Selecione um funcionário para excluir.",
        "Atenção",
        JOptionPane.WARNING_MESSAGE);
    return;
}

// 2) Recupera o ID da linha selecionada (coluna 0)
int id = (int) tblFuncionarios.getValueAt(row, 0);

// 3) Confirmação
int opc = JOptionPane.showConfirmDialog(this,
    "Tem certeza que deseja excluir o funcionário selecionado?",
    "Confirmar Exclusão",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE);
if (opc != JOptionPane.YES_OPTION) {
    return;
}

// 4) Executa o DELETE
String sql = "DELETE FROM funcionarios WHERE ID = ?";
try (Connection conn = DriverManager.getConnection(URL, USER, PASS);
     PreparedStatement ps = conn.prepareStatement(sql)) {

    ps.setInt(1, id);
    int excluiu = ps.executeUpdate();

    if (excluiu > 0) {
        JOptionPane.showMessageDialog(this,
            "Funcionário excluído com sucesso!",
            "Sucesso",
            JOptionPane.INFORMATION_MESSAGE);
        // 5) Recarrega a tabela e limpa o formulário
        carregarFuncionarios();
        txtNome.setText("");
        cmbCargo.setSelectedIndex(0);
        txtLogin.setText("");
        pwdSenha.setText("");
    } else {
        JOptionPane.showMessageDialog(this,
            "Nenhum funcionário encontrado com o ID informado.",
            "Aviso",
            JOptionPane.WARNING_MESSAGE);
    }

} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this,
        "Erro ao excluir funcionário:\n" + ex.getMessage(),
        "Erro de Conexão",
        JOptionPane.ERROR_MESSAGE);
}
// ===== FIM do bloco JDBC ===== 
    
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
    
    // ===== INÍCIO do bloco para LIMPAR CAMPOS =====
txtNome.setText("");
cmbCargo.setSelectedIndex(0);
txtLogin.setText("");
pwdSenha.setText("");
tblFuncionarios.clearSelection();
// ===== FIM do bloco para LIMPAR CAMPOS =====
   
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestaoFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestaoFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestaoFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestaoFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestaoFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox<String> cmbCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField pwdSenha;
    private javax.swing.JTable tblFuncionarios;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
